sudo vi /etc/nginx/sites-available/mrcloudbook.online
Paste in the following configuration block, which is similar to the default, but updated for our new directory and domain name:
Paste the below (replace your domain)

upstream jenkins{
    server 127.0.0.1:8080;
}

server{
    listen      80;
    server_name ur dns name;

    access_log  /var/log/nginx/jenkins.access.log;
    error_log   /var/log/nginx/jenkins.error.log;

    proxy_buffers 16 64k;
    proxy_buffer_size 128k;

    location / {
        proxy_pass  http://jenkins;
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_redirect off;

        proxy_set_header    Host            $host;
        proxy_set_header    X-Real-IP       $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto https;
    }

}
Next, let’s enable the file by creating a link from it to the sites-enabled directory, which Nginx reads from during startup:
Run from shell prompt (replace your domain)

sudo ln -s /etc/nginx/sites-available/mrcloudbook.online /etc/nginx/sites-enabled/
Next, test to make sure that there are no syntax errors in any of your Nginx files:
Run from shell prompt

sudo nginx -t
If there aren’t any problems, restart Nginx to enable your changes:
Run from shell prompt

sudo systemctl restart nginx
Nginx should now be serving Jenkins from your domain name. You can test this by navigating to http://your_domain


sudo certbot --nginx -d mrcloudbook.online
